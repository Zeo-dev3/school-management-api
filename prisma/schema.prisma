// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  price      Float
  stock      Int
  rating     Float    @default(0)
  reviewers  Int      @default(0)
  shopName   String   @map("shop_name")
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model User {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(50)
  pin         String
  coins       Int       @default(0)
  creditScore Int       @default(100) @map("credit_score")
  alamat      String?
  kelas       Kelas
  messages    Message[]
}

enum Kelas {
  KELAS_10_SMA
  KELAS_11_SMA
  KELAS_12_SMA
}

model Mapel {
  id     Int      @id @default(autoincrement())
  mapel  String
  materi Materi[]
}

model Materi {
  id      Int    @id @default(autoincrement())
  name    String
  author  String
  lesson  String
  Mapel   Mapel? @relation(fields: [mapelId], references: [id])
  mapelId Int?
}

model Message {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  roomId    String
  createdAt DateTime @default(now())
  Room      Room     @relation(fields: [roomId], references: [id])
}

model Room {
  id       String    @id @default(cuid())
  name     String
  messages Message[]
}
